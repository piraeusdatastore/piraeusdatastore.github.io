apiVersion: v1
kind: Secret
metadata:
  name: piraeus-cert-pwd
type: kubernetes.io/generic
data:
  jks-pwd: bGluc3Rvcgo= #linstor
  pkcs12-pwd: bGluc3Rvcgo= #linstor
# ---
# apiVersion: cert-manager.io/v1alpha2
# kind: Certificate
# metadata:
#   name: piraeus-cert-ssl-controller
# spec:
#   secretName: piraeus-cert-ssl-controller
#   dnsNames:
#   - # <What should be used here?>
#   issuerRef:
#     name: letsencrypt-prod
#   keystores:
#     jks:
#       create: true
#       passwordSecretRef: # Password used to encrypt the keystore
#         key: jks-pwd
#         name: piraeus-cert-pwd
# ---
# apiVersion: cert-manager.io/v1alpha2
# kind: Certificate
# metadata:
#   name: piraeus-cert-ssl-satellite
# spec:
#   secretName: piraeus-cert-ssl-satellite
#   dnsNames:
#   - # <What should be used here?>
#   issuerRef:
#     name: letsencrypt-prod
#   keystores:
#     jks:
#       create: true
#       passwordSecretRef: # Password used to encrypt the keystore
#         key: jks-pwd
#         name: piraeus-cert-pwd
# ---
# apiVersion: cert-manager.io/v1alpha2
# kind: Certificate
# metadata:
#   name: piraeus-cert-https-controller
# spec:
#   secretName: piraeus-cert-https-controller
#   dnsNames:
#   - # <What should be used here?>
#   issuerRef:
#     name: letsencrypt-prod
#   keystores:
#     pkcs12:
#       create: true
#       passwordSecretRef: # Password used to encrypt the keystore
#         key: pkcs12-pwd
#         name: piraeus-cert-pwd
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: piraeus-cert-https-client
spec:
  secretName: piraeus-cert-https-client
  dnsNames:
  - piraeus-op-cs
  - piraeus-op-cs.default
  - piraeus-op-cs.default.svc
  - piraeus-op-cs.default.svc.cluster.local
  issuerRef:
    name: k8s-ca-issuer
    kind: ClusterIssuer
  keystores:
    pkcs12:
      create: true
      passwordSecretRef: # Password used to encrypt the keystore
        key: pkcs12-pwd
        name: piraeus-cert-pwd