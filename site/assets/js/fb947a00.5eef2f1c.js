"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[197],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,h=m["".concat(l,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6527:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={id:"intro",sidebar_position:1},i="Piraeus Operator Documentation",s={unversionedId:"intro",id:"intro",title:"Piraeus Operator Documentation",description:"Deployment",source:"@site/docs/00.intro.md",sourceDirName:".",slug:"/intro",permalink:"/site/docs/intro",draft:!1,editUrl:"https://github.com/piraeusdatastore/docs/00.intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"intro",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Preparing the host for DRBD",permalink:"/site/docs/host-setup"}},l={},p=[{value:"Deployment",id:"deployment",level:2},{value:"The LINSTOR client",id:"the-linstor-client",level:2},{value:"Configuring storage pools",id:"configuring-storage-pools",level:2},{value:"Creating volumes",id:"creating-volumes",level:2},{value:"Snapshots",id:"snapshots",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"piraeus-operator-documentation"},"Piraeus Operator Documentation"),(0,o.kt)("h2",{id:"deployment"},"Deployment"),(0,o.kt)("p",null,"This project README contains documentation on the initial deployment\nprocess. A quick summary can be found here:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# Create an initial set of persistent volumes for etcd. Creates a hostpath volume on every control-plane node.\nhelm install piraeus-etcd-pv ./charts/pv-hostpath\n# Deploy the piraeus operator chart. Replace <image> with the piraeus DRBD loader image matching your host OS.\nhelm install piraeus-op ./charts/piraeus --set operator.satelliteSet.kernelModuleInjectionImage=<image>\n")),(0,o.kt)("p",null,"Then, wait for the deployment to finish:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"kubectl wait  --for=condition=Ready --timeout=10m pod --all\n")),(0,o.kt)("h2",{id:"the-linstor-client"},"The LINSTOR client"),(0,o.kt)("p",null,"Piraeus uses ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/linbit/linstor-server"},"LINSTOR")," as the storage backend. Most\nconfiguration needs can be handled by the Piraeus Operator by editing one of the\n",(0,o.kt)("inlineCode",{parentName:"p"},"LinstorController"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"LinstorSatelliteSet")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"LinstorCSIDriver")," resources."),(0,o.kt)("p",null,"However, in some cases you might want to directly interface with the LINSTOR system using the ",(0,o.kt)("inlineCode",{parentName:"p"},"linstor")," command.\nThere are two ways to achieve this:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/piraeusdatastore/kubectl-linstor"},"kubectl-linstor")," plugin. The plugin interfaces\nwith the resources used by the Piraeus Operator and enables you to use ",(0,o.kt)("inlineCode",{parentName:"li"},"kubectl linstor ...")," to execute LINSTOR\ncommands."),(0,o.kt)("li",{parentName:"ul"},"Execute the ",(0,o.kt)("inlineCode",{parentName:"li"},"linstor")," command directly in the controller pod:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"kubectl exec -it deployment/piraeus-op-cs-controller -- linstor ...\n")))),(0,o.kt)("h2",{id:"configuring-storage-pools"},"Configuring storage pools"),(0,o.kt)("p",null,"To provision volumes, you need to configure storage pools. The LINSTOR backend supports\na range of different storage providers. For some common providers, the Piraeus Operator\nprovides convenient configuration via the ",(0,o.kt)("inlineCode",{parentName:"p"},"LinstorSatelliteSet")," resource. You can read more\non how to configure storage ",(0,o.kt)("a",{parentName:"p",href:"/site/docs/storage"},"here"),"."),(0,o.kt)("h2",{id:"creating-volumes"},"Creating volumes"),(0,o.kt)("p",null,"Once you have storage pools configured (confirm by running ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl linstor storage-pool list"),"), you\ncan almost start creating Persistent Volumes (PV) with Piraeus. First you will need to create\na new storage class in Kubernetes."),(0,o.kt)("p",null,"The following example storage class configures piraeus to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"use 2 replicas for every persistent volume"),(0,o.kt)("li",{parentName:"ul"},"use the ",(0,o.kt)("inlineCode",{parentName:"li"},"xfs")," filesystem"),(0,o.kt)("li",{parentName:"ul"},"use storage pools named ",(0,o.kt)("inlineCode",{parentName:"li"},"ssd")),(0,o.kt)("li",{parentName:"ul"},"allow volume expansion by resizing the Persistent Volume Claim (PVC)."),(0,o.kt)("li",{parentName:"ul"},"wait for the first Pod to create the volume, placing a replica on the same node if possible.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: piraeus-ssd\nprovisioner: linstor.csi.linbit.com\nallowVolumeExpansion: true\nvolumeBindingMode: WaitForFirstConsumer\nparameters:\n  autoPlace: "2"\n  storagePool: ssd\n  csi.storage.k8s.io/fstype: xfs\n')),(0,o.kt)("p",null,"You can find a full list of supported options ",(0,o.kt)("a",{parentName:"p",href:"https://linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-sc-parameters"},"here"),"."),(0,o.kt)("p",null,"Using this storage class, you can provision volumes by applying a Persistent Volume Claim and waiting\nfor Piraeus to provision the PV. The following PVC creates a 5GiB volume using the above storage class:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\n  kind: PersistentVolumeClaim\n  metadata:\n    name: piraeus-pvc-1\n  spec:\n    storageClassName: piraeus-ssd\n    accessModes:\n    - ReadWriteOnce\n    resources:\n      requests:\n        storage: 5Gi\n")),(0,o.kt)("h2",{id:"snapshots"},"Snapshots"),(0,o.kt)("p",null,"Piraeus supports snapshots via the CSI snapshotting feature. To enable this feature in your\ncluster, you need to add a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubernetes-csi/external-snapshotter/"},"Snapshot Controller")," to your cluster."),(0,o.kt)("p",null,"Some Kubernetes distributions (for example: OpenShift) already bundle this snapshot controller. On distributions\nwithout a bundled snapshot controller, you can use our guide ",(0,o.kt)("a",{parentName:"p",href:"/site/docs/optional-components#snapshot-support-components"},"here"),"."),(0,o.kt)("h1",{id:"additional-information"},"Additional information"),(0,o.kt)("p",null,"Should you require further information check out the following links:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Additional documentation on ",(0,o.kt)("a",{parentName:"li",href:"https://linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-basic-configuration-and-deployment"},"LINSTOR"),"."),(0,o.kt)("li",{parentName:"ul"},"You can join our ",(0,o.kt)("a",{parentName:"li",href:"https://piraeus-datastore.slack.com/join/shared_invite/enQtOTM4OTk3MDcxMTIzLTM4YTdiMWI2YWZmMTYzYTg4YjQ0MjMxM2MxZDliZmEwNDA0MjBhMjIxY2UwYmY5YWU0NDBhNzFiNDFiN2JkM2Q"},"community slack channel"),"."),(0,o.kt)("li",{parentName:"ul"},"Professional support is available to ",(0,o.kt)("a",{parentName:"li",href:"https://linbit.com/kubernetes"},"LINBIT customers"),".")))}c.isMDXComponent=!0}}]);