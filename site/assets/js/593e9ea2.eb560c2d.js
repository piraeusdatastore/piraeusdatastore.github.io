"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[535],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(r),f=i,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9578:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=r(7462),i=(r(7294),r(3905));const o={},a="Distributions",s={unversionedId:"distributions",id:"distributions",title:"Distributions",description:"Some Kubernetes distributions require changes to the default configuration to work.",source:"@site/docs/03.distributions.md",sourceDirName:".",slug:"/distributions",permalink:"/site/docs/distributions",draft:!1,editUrl:"https://github.com/piraeusdatastore/docs/03.distributions.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuring Storage",permalink:"/site/docs/storage"},next:{title:"Using LINSTOR's Kubernetes Backend",permalink:"/site/docs/k8s-backend"}},l={},u=[{value:"Openshift",id:"openshift",level:2},{value:"microk8s",id:"microk8s",level:2},{value:"k0s",id:"k0s",level:2}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"distributions"},"Distributions"),(0,i.kt)("p",null,"Some Kubernetes distributions require changes to the default configuration to work."),(0,i.kt)("h2",{id:"openshift"},"Openshift"),(0,i.kt)("p",null,"We provide an example override file for Openshift. You can find it here."),(0,i.kt)("p",null,"Depending on your host OS, you might also need to create your own DRBD injector image. Read more\n",(0,i.kt)("a",{parentName:"p",href:"/site/docs/host-setup#injector-image-for-compiling-without-headers-on-host"},"here"),"."),(0,i.kt)("h2",{id:"microk8s"},"microk8s"),(0,i.kt)("p",null,"MicroK8s doesn't use the traditional ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/lib/kubelet")," directory for kubelet data. Instead, it uses\n",(0,i.kt)("inlineCode",{parentName:"p"},"/var/snap/microk8s/common/var/lib/kubelet"),". To get the CSI driver to work on microk8s, use the following override\nduring installation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"--set csi.kubeletPath=/var/snap/microk8s/common/var/lib/kubelet\n")),(0,i.kt)("h2",{id:"k0s"},"k0s"),(0,i.kt)("p",null,"MicroK8s doesn't use the traditional ",(0,i.kt)("inlineCode",{parentName:"p"},"/var/lib/kubelet")," directory for kubelet data. Instead, it uses\n",(0,i.kt)("inlineCode",{parentName:"p"},"/var/lib/k0s/kubelet"),". To get the CSI driver to work on k0s, use the following override\nduring installation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"--set csi.kubeletPath=/var/lib/k0s/kubelet\n")))}p.isMDXComponent=!0}}]);